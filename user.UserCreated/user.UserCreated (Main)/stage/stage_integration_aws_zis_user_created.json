{
    "zis_template_version": "2019-10-14",
    "name": "AWS ZIS user.UserCreated",
    "description": "Listens to ZIS event 'user.UserCreated' and starts an Amazon States Language workflow; can contain conditional branches, data transformations, and API calls.",
    "resources": {
        "JobSpec": {
            "type": "ZIS::JobSpec",
            "properties": {
                "name": "UserCreatedJobSpec",
                "event_source": "support",
                "event_type": "user.UserCreated",
                "flow_name": "zis:{{user_created}}:flow:UserCreatedFlow"
            }
        },
        "Flow": {
            "type": "ZIS::Flow",
            "properties": {
                "name": "UserCreatedFlow",
                "definition": {
                    "StartAt": "wait.five_seconds1",
                    "States": {
                        "wait.five_seconds1": {
                            "Type": "Wait",
                            "Seconds": 5,
                            "Comment": "Wait 5 Seconds before executing the next Action.",
                            "Next": "action.FilterRoleEndUser"
                        },
                        "action.FilterRoleEndUser": {
                            "Type": "Action",
                            "ActionName": "zis:common:transform:Jq",
                            "Comment": "Check if the Role is an End-User.",
                            "Parameters": {
                                "expr": ".input.user_event.user.role == \"end-user\"",
                                "data.$": "$"
                            },
                            "ResultPath": "$.RoleIsEndUser",
                            "Next": "choice.CheckRoleEndUser"
                        },
                        "choice.CheckRoleEndUser": {
                            "Type": "Choice",
                            "Comment": "Decision to Continue or End the Flow.",
                            "Choices": [
                                {
                                    "Variable": "$.RoleIsEndUser",
                                    "BooleanEquals": true,
                                    "Next": "action.ShowUser1"
                                }
                            ],
                            "Default": "wait.five_seconds2"
                        },
                        "action.ShowUser1": {
                            "Type": "Action",
                            "ActionName": "zis:{{user_created}}:action:show_user1",
                            "Comment": "Get User Data",
                            "Parameters": {
                                "user_id.$": "$.input.user_event.user.id"
                            },
                            "ResultPath": "$.fetched_user",
                            "Next": "action.FilterOrganization"
                        },
                        "action.FilterOrganization": {
                            "Type": "Action",
                            "ActionName": "zis:common:transform:Jq",
                            "Comment": "Check if Organization is NWSE",
                            "Parameters": {
                                "expr": ".user | (.organization_id == {{nwse_organization_id}})",
                                "data.$": "$.fetched_user"
                            },
                            "ResultPath": "$.OrganizationResult",
                            "Next": "choice.CheckOrganization"
                        },
                        "choice.CheckOrganization": {
                            "Type": "Choice",
                            "Comment": "Decision to Continue or End the Flow.",
                            "Choices": [
                                {
                                    "Variable": "$.OrganizationResult",
                                    "BooleanEquals": true,
                                    "Next": "action.FilterEmailDomain"
                                }
                            ],
                            "Default": "wait.five_seconds2"
                        },
                        "action.FilterEmailDomain": {
                            "Type": "Action",
                            "ActionName": "zis:common:transform:Jq",
                            "Comment": "Check if Email contains NWSE Domain.",
                            "Parameters": {
                                "expr": ".user | (.email | test(\".*@(new-work.se|kununu.com|onlyfy.com|prescreen.io|xing.com)$\") | not)",
                                "data.$": "$.fetched_user"
                            },
                            "ResultPath": "$.EmailDomainResult",
                            "Next": "choice.CheckEmailDomain"
                        },
                        "choice.CheckEmailDomain": {
                            "Type": "Choice",
                            "Comment": "Decision to Continue or End the Flow.",
                            "Choices": [
                                {
                                    "Variable": "$.EmailDomainResult",
                                    "BooleanEquals": true,
                                    "Next": "action.RemoveOrganization"
                                }
                            ],
                            "Default": "wait.five_seconds2"
                        },
                        "action.RemoveOrganization": {
                            "Type": "Action",
                            "ActionName": "zis:{{user_created}}:action:remove_organization",
                            "Comment": "Remove Organization / Set Organization to 'null'.",
                            "Parameters": {
                                "user_id.$": "$.input.user_event.user.id"
                            },
                            "Next": "succeed.RemovedOrganization"
                        },
                        "succeed.RemovedOrganization": {
                            "Type": "Succeed",
                            "Comment": "Log",
                            "Message": "âœ… - User ID: {{$.input.user_event.user.id}}; Removed Organization, as created User is no NWSE Member."
                        },
                        "wait.five_seconds2": {
                            "Type": "Wait",
                            "Seconds": 5,
                            "Comment": "Wait 5 Seconds before executing the next Action.",
                            "Next": "action.FilterRoleAgent"
                        },
                        "action.FilterRoleAgent": {
                            "Type": "Action",
                            "ActionName": "zis:common:transform:Jq",
                            "Comment": "Check if the Role is Agent.",
                            "Parameters": {
                                "expr": ".input.user_event.user.role == \"agent\"",
                                "data.$": "$"
                            },
                            "ResultPath": "$.RoleIsAgent",
                            "Next": "choice.CheckRoleAgent"
                        },
                        "choice.CheckRoleAgent": {
                            "Type": "Choice",
                            "Comment": "Decision to Continue or End the Flow.",
                            "Choices": [
                                {
                                    "Variable": "$.RoleIsAgent",
                                    "BooleanEquals": true,
                                    "Next": "action.ShowUser2"
                                }
                            ],
                            "Default": "action.UpdateUserUncheck"
                        },
                        "action.ShowUser2": {
                            "Type": "Action",
                            "ActionName": "zis:{{user_created}}:action:show_user2",
                            "Comment": "Get User Data",
                            "Parameters": {
                                "user_id.$": "$.input.user_event.user.id"
                            },
                            "ResultPath": "$.fetched_user",
                            "Next": "action.PostFetchedUser"
                        },
                        "action.PostFetchedUser": {
                            "Type": "Action",
                            "ActionName": "zis:{{user_created}}:action:post_fetched_user",
                            "Comment": "Post 'fetched_user' to Power Automate Flow.",
                            "Next": "action.FilterCustomRole"
                        },
                        "action.FilterCustomRole": {
                            "Type": "Action",
                            "ActionName": "zis:common:transform:Jq",
                            "Comment": "Check if the Custom Role is 'Light Agent'.",
                            "Parameters": {
                                "expr": ".user.custom_role_id == {{light_agent_role_id}}",
                                "data.$": "$.fetched_user"
                            },
                            "ResultPath": "$.CustomRoleIsLightAgent",
                            "Next": "choice.CheckCustomRole"
                        },
                        "choice.CheckCustomRole": {
                            "Type": "Choice",
                            "Comment": "Decision to Continue or End the Flow.",
                            "Choices": [
                                {
                                    "Variable": "$.CustomRoleIsLightAgent",
                                    "BooleanEquals": true,
                                    "Next": "action.UpdateUserCheck"
                                }
                            ],
                            "Default": "action.UpdateUserUncheck"
                        },
                        "action.UpdateUserCheck": {
                            "Type": "Action",
                            "ActionName": "zis:{{user_created}}:action:update_user_check",
                            "Comment": "Check 'is_light_agent' in User Profile.",
                            "Parameters": {
                                "user_id.$": "$.input.user_event.user.id"
                            },
                            "Next": "succeed.FlowEndCheck"
                        },
                        "succeed.FlowEndCheck": {
                            "Type": "Succeed",
                            "Comment": "Log",
                            "Message": "âœ… - User ID: {{$.input.user_event.user.id}}; User is 'light agent'. checked: 'is_light_agent'"
                        },
                        "action.UpdateUserUncheck": {
                            "Type": "Action",
                            "ActionName": "zis:{{user_created}}:action:update_user_uncheck",
                            "Comment": "Uncheck 'is_light_agent' in User Profile.",
                            "Parameters": {
                                "user_id.$": "$.input.user_event.user.id"
                            },
                            "Next": "succeed.FlowEndUncheck"
                        },
                        "succeed.FlowEndUncheck": {
                            "Type": "Succeed",
                            "Comment": "Log",
                            "Message": "âœ… - User ID: {{$.input.user_event.user.id}}; User is '{{$.input.user_event.user.role}}'. unchecked: 'is_light_agent'"
                        }
                    }
                }
            }
        },
        "action.ShowUser1": {
            "type": "ZIS::Action::Http",
            "properties": {
                "name": "show_user1",
                "definition": {
                    "method": "GET",
                    "path": "/api/v2/users/{{$.user_id}}.json",
                    "connectionName": "zendesk"
                }
            }
        },
        "action.ShowUser2": {
            "type": "ZIS::Action::Http",
            "properties": {
                "name": "show_user2",
                "definition": {
                    "method": "GET",
                    "path": "/api/v2/users/{{$.user_id}}.json",
                    "connectionName": "zendesk"
                }
            }
        },
        "action.RemoveOrganization": {
            "type": "ZIS::Action::Http",
            "properties": {
                "name": "remove_organization",
                "definition": {
                    "method": "PUT",
                    "path": "/api/v2/users/{{$.user_id}}",
                    "requestBody": {
                        "user": {
                            "organization_id": null,
                            "user_fields": {
                                "usr_is_light_agent": false
                            }
                        }
                    },
                    "connectionName": "zendesk"
                }
            }
        },
        "action.UpdateUserCheck": {
            "type": "ZIS::Action::Http",
            "properties": {
                "name": "update_user_check",
                "definition": {
                    "method": "PUT",
                    "path": "/api/v2/users/{{$.user_id}}",
                    "requestBody": {
                        "user": {
                            "user_fields": {
                                "usr_is_light_agent": true
                            }
                        }
                    },
                    "connectionName": "zendesk"
                }
            }
        },
        "action.UpdateUserUncheck": {
            "type": "ZIS::Action::Http",
            "properties": {
                "name": "update_user_uncheck",
                "definition": {
                    "method": "PUT",
                    "path": "/api/v2/users/{{$.user_id}}",
                    "requestBody": {
                        "user": {
                            "user_fields": {
                                "usr_is_light_agent": false
                            }
                        }
                    },
                    "connectionName": "zendesk"
                }
            }
        },
        "action.PostFetchedUser": {
            "type": "ZIS::Action::Http",
            "properties": {
                "name": "post_fetched_user",
                "definition": {
                    "method": "POST",
                    "url": "{{https_endpoint_id_portal}}",
                    "requestBody": {
                        "account_id": {{zendesk_account_id}},
                        "details": "$.fetched_user",
                        "type": "user.UserCreated"
                    }
                }
            }
        },
        "action.PostWebhook": {
            "type": "ZIS::Action::Http",
            "properties": {
                "name": "post_webhook",
                "definition": {
                    "method": "POST",
                    "url": "{{https_endpoint_zis_testing}}",
                    "requestBody": "$.payload"
                }
            }
        }
    }
}
